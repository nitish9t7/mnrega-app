/*
 * Copyright 2022 Team GALAXIUS
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion ProjectConfig.compileSdkVersion

    defaultConfig {
        minSdkVersion ProjectConfig.minSdkVersion
        targetSdkVersion ProjectConfig.targetSdkVersion
        consumerProguardFiles 'consumer-rules.pro'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
            reports {
                junitXml.enabled = true
                html.enabled = true
            }
            if (name == "testDebugUnitTest") {
                kover {
                    disabled = false
                    binaryReportFile.set(file("$buildDir/test/test-debug-report.bin"))
                }
            }
        }
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    // Core module
    implementation project(":core")

    // Retrofit
    api "com.squareup.retrofit2:retrofit:$retrofitVersion"

    // JavaX Inject
    implementation "javax.inject:javax.inject:$javaxInjectVersion"

    // Moshi Retrofit Converter
    api "com.squareup.retrofit2:converter-moshi:$retrofitVersion"

    implementation 'com.google.code.gson:gson:2.9.0' // Gradle

    // Testing
    testImplementation "junit:junit:$jUnitVersion"
    testImplementation "io.kotest:kotest-runner-junit5:$kotestVersion"
    testImplementation "io.kotest:kotest-assertions-core:$kotestVersion"
    testImplementation "io.kotest:kotest-property:$kotestVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$okHttpVersion"
    androidTestImplementation "io.mockk:mockk-android:$mockkVersion"
}
